---

{% if cluster == 'kubernetes' %}
apiVersion: {{ deployment_api_version }}
kind: Deployment
{% else %}
apiVersion: {{ deploymentconfig_api_version }}
kind: DeploymentConfig
{% endif %}
metadata:
  name: {{ app_name }}
  namespace: {{ namespace }}
  labels:
    app: {{ app_name }}
    service: {{ app_name }}
spec:
  replicas: 1
{% if cluster == 'kubernetes' %}
  selector:
    matchLabels:
      app: {{ app_name }}
      service: {{ app_name }}
  strategy:
    type: Recreate
{% else %}
  selector:
    app: {{ app_name }}
    service: {{ app_name }}
  strategy:
    type: Rolling
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
  test: false
  triggers:
    - type: ConfigChange
{% endif %}
  template:
    metadata:
      labels:
        app: {{ app_name }}
        service: {{ app_name }}
        mysql_version: '{{ mysql_version }}'
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
        - image: {{ app_image }}
          name: mysql
          env:
            - name: MYSQL_USER
              value: {{ mysql_user }}
            - name: MYSQL_PASSWORD
              value: {{ mysql_password }}
            - name: MYSQL_DATABASE
              value: {{ mysql_database }}
          livenessProbe:
{% if ansible_version.full is version('2.6', '>=') %}
            exec:
{% else %}
            _exec:
{% endif %}
              command:
                - "/bin/sh"
                - "-i"
                - "-c"
                - "mysqladmin -u$MYSQL_USER -p$MYSQL_PASSWORD ping"
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
{% if ansible_version.full is version('2.6', '>=') %}
            exec:
{% else %}
            _exec:
{% endif %}
              command:
                - "/bin/sh"
                - "-i"
                - "-c"
                - "MYSQL_PWD=\"$MYSQL_PASSWORD\" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE -e 'SELECT 1'"
            timeoutSeconds: 1
            initialDelaySeconds: 5
          terminationMessagePath: /dev/termination-log
          workingDir: /
          ports:
            - containerPort: {{ mysql_port }}
              protocol: TCP
          volumeMounts:
            - name: mysql
              mountPath: /var/lib/mysql/data
      volumes:
{% if _apb_plan_id == 'prod' %}
        - name: mysql
          persistentVolumeClaim:
            claimName: {{ app_name }}
{% else %}
        - name: mysql
          emptyDir: []
{% endif %}
