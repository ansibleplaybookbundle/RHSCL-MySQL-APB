---
- block:
  - name: Find pod we need to update
    shell: oc get pods -n {{ namespace }} -l app=rhscl-mysql-apb -o custom-columns=name:.metadata.name --no-headers
    register: oldpod

  - name: Find dc we will clean up
    shell: oc get dc -n {{ namespace }} -l app=rhscl-mysql-apb -o custom-columns=name:.metadata.name --no-headers
    register: olddc

  - name: Prepare for downgrade
    shell: |
           oc exec -it -n {{ namespace }} {{ oldpod.stdout }} -- /bin/bash -c "mysql -u root -e \"
           ALTER TABLE mysql.procs_priv MODIFY Grantor char(77) COLLATE utf8_bin NOT NULL DEFAULT '';
           ALTER TABLE mysql.columns_priv MODIFY User char(16) NOT NULL default '';
           ALTER TABLE mysql.user MODIFY User char(16) NOT NULL default '';
           ALTER TABLE mysql.db MODIFY User char(16) NOT NULL default '';
           ALTER TABLE mysql.procs_priv MODIFY User char(16) binary DEFAULT '' NOT NULL;
           ALTER TABLE mysql.user ADD Password char(41) character set latin1 collate latin1_bin NOT NULL default '' AFTER user;
           UPDATE mysql.user SET password = authentication_string WHERE LENGTH(authentication_string) = 41 AND plugin = 'mysql_native_password';
           UPDATE mysql.user SET authentication_string = '' WHERE LENGTH(authentication_string) = 41 AND plugin = 'mysql_native_password';
           ALTER TABLE mysql.help_category ENGINE='MyISAM' STATS_PERSISTENT=DEFAULT;
           ALTER TABLE mysql.help_keyword ENGINE='MyISAM' STATS_PERSISTENT=DEFAULT;
           ALTER TABLE mysql.help_relation ENGINE='MyISAM' STATS_PERSISTENT=DEFAULT;
           ALTER TABLE mysql.help_topic ENGINE='MyISAM' STATS_PERSISTENT=DEFAULT;
           ALTER TABLE mysql.time_zone ENGINE='MyISAM' STATS_PERSISTENT=DEFAULT;
           ALTER TABLE mysql.time_zone_leap_second ENGINE='MyISAM' STATS_PERSISTENT=DEFAULT;
           ALTER TABLE mysql.time_zone_name ENGINE='MyISAM' STATS_PERSISTENT=DEFAULT;
           ALTER TABLE mysql.time_zone_transition  ENGINE='MyISAM' STATS_PERSISTENT=DEFAULT;
           ALTER TABLE mysql.time_zone_transition_type ENGINE='MyISAM' STATS_PERSISTENT=DEFAULT;
           ALTER TABLE mysql.plugin ENGINE='MyISAM' STATS_PERSISTENT=DEFAULT;
           ALTER TABLE mysql.servers ENGINE='MyISAM' STATS_PERSISTENT=DEFAULT;
           ALTER TABLE mysql.user MODIFY plugin CHAR(64) COLLATE utf8_bin DEFAULT 'mysql_native_password';
           DROP DATABASE sys;\""
    when:
    - mysql_version == "5.6"
    - not("5.6" in olddc.stdout)

  - name: Create db backup directory
    shell: oc exec -it -n {{ namespace }} {{ oldpod.stdout }} -- /bin/bash -c "mkdir -p /tmp/db"

  - name: Backup source database
    shell: oc exec -it -n {{ namespace }} {{ oldpod.stdout }} -- /bin/bash -c "mysqldump -u root --all-databases > /tmp/db/dump"

  - name:  rsync db backup to apb
    shell: oc rsync -n {{ namespace }} {{ oldpod.stdout }}:/tmp/db /tmp
  when: update is defined

- name: Set {{ service_name }} service state to {{ state }}
  k8s_v1_service:
    name: "{{ service_name }}"
    namespace: "{{ namespace }}"
    labels:
      app: rhscl-mysql-apb
      service: "{{ service_name }}"
    selector:
      app: rhscl-mysql-apb
      service: "{{ service_name }}-{{ mysql_version }}-{{ _apb_plan_id }}"
    ports:
    - name: mysql
      port: 3306
      target_port: 3306
    state: "{{ state }}"
  register: mysql_service

- include_tasks: dev.yml
  when: _apb_plan_id == "dev"

- include_tasks: prod.yml
  when: _apb_plan_id == "prod"

- block:
  - name: Wait for mysql to come up
    wait_for:
      port: 3306
      host: "{{ mysql_service.service.spec.cluster_ip }}"
      timeout: 300

  - name: Find pod we need to restore
    shell: oc get pods -n {{ namespace }} --show-all=false -l service={{ service_name }}-{{ mysql_version }}-{{ _apb_plan_id }} -o custom-columns=name:.metadata.name --no-headers
    register: newpod

  - name: rsync db backup to new pod
    shell: oc rsync -n {{ namespace }} /tmp/db {{ newpod.stdout }}:/tmp

  - name: Restore database
    shell: oc exec -it -n {{ namespace }} {{ newpod.stdout }} -- /bin/bash -c "mysql -u root < /tmp/db/dump"

  - name: Run mysql_upgrade
    shell: oc exec -it -n {{ namespace }} {{ newpod.stdout }} -- /bin/bash -c "mysql_upgrade -u root --force"

  - name: Remove old dc
    openshift_v1_deployment_config:
      name: "{{ olddc.stdout }}"
      namespace: '{{ namespace }}'
      state: absent

  - name: ensure production volume is absent
    k8s_v1_persistent_volume_claim:
      name: "{{ service_name }}-{{ item }}-prod"
      namespace: '{{ namespace }}'
      access_modes:
        - ReadWriteOnce
      resources_requests:
        storage: '{{ volume_size }}'
      state: "absent"
    with_items:
      - "5.6"
      - "5.7"
    when: _apb_plan_id == "dev" or item != mysql_version
  when: update is defined

- name: encode bind credentials
  asb_encode_binding:
    fields:
      DB_TYPE: "mysql"
      DB_HOST: "{{ service_name }}"
      DB_PORT: "3306"
      DB_USER: "{{ mysql_user }}"
      DB_PASSWORD: "{{ mysql_password }}"
      DB_NAME: "{{ mysql_database }}"
  when: state == 'present'
